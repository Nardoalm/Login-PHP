services:
  # Serviço PHP-FPM (processador PHP)
  app:
    build:
      context: .
      dockerfile: Dockerfile.php
    volumes:
      - .:/var/www/html # Monta a pasta atual do seu projeto PHP no contêiner
    ports:
      - "9000:9000" # Porta interna do PHP-FPM, não acessível diretamente do seu navegador
    networks:
      - app-network

  # Serviço Nginx (servidor web)
  web:
    image: nginx:stable-alpine # Imagem oficial do Nginx
    ports:
      - "80:80" # Mapeia a porta 80 do seu host (máquina) para a porta 80 do contêiner
    volumes:
      - .:/var/www/html # Monta a pasta do seu projeto PHP para o Nginx servir
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf # Monta a configuração do Nginx
    depends_on:
      - app # Garante que o PHP-FPM inicie antes do Nginx
    networks:
      - app-network

  # Serviço Banco de Dados MySQL
  db:
    image: mysql:8.0 # Imagem oficial do MySQL 8
    env_file: .env # Carrega as variáveis de ambiente do arquivo .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} # Senha do usuário root do MySQL
      MYSQL_DATABASE: ${DB_DATABASE}     # Nome do banco de dados a ser criado
      MYSQL_USER: ${DB_USERNAME}         # Nome de usuário para o banco
      MYSQL_PASSWORD: ${DB_PASSWORD}     # Senha para o usuário do banco
    volumes:
      - db_data:/var/lib/mysql # Volume persistente para guardar os dados do banco
    ports:
      - "3306:3306" # Mapeia a porta 3306 do seu host para a porta 3306 do contêiner
    networks:
      - app-network

networks:
  app-network:
    driver: bridge # Define uma rede interna para os contêineres se comunicarem

volumes:
  db_data: # Define o volume nomeado para a persistência dos dados do MySQL